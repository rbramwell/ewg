heat_template_version: 2013-05-23

description: >
  This is a nested Heat used by the E-Commerce Architecture Workload reference document
  created by the Enterprise Working Group.  These templates demonstrate a sample
  LAMP architecture running OpenCart.  This template file launches the application
  tier nodes, and installs Apache, PHP, MySQL client, and finally OpenCart.
  This serves as a guide to new users and is not meant for production deployment.

  #Created by: Craig Sterrett 9/23/2016

parameters:
  ssh_key_name:
    type: string
    label: SSH Key Name
    description: REQUIRED PARAMETER -Name of an existing SSH KeyPair to enable SSH access to instances.
    hidden: false

  server_name:
    type: string
    label: Server Name
    description: REQUIRED PARAMETER - Name of the instance to spin up.
    hidden: false

  instance_flavor:
    type: string
    label: Instance Flavor
    description: The flavor type to use for each server.
    hidden: false

  image_id:
    type: string
    label: Image ID
    description: >
      REQUIRED PARAMETER - The image id to be used for the compute instance. Please specify
      your own Image ID in your project/tenant.
    hidden: false

  private_network_id:
    type: string
    default: Services_Layer_private_network
    description: The private Application network that will be utilized for all App servers

  public_network_name:
    type: string
    description: Public network name where we can get a floating IP from

  security_group:
    type: string
    default: Services_Layer_SG
    description: The Application security group that will be utilized for all App servers

  pool_name:
    type: string
    description: LBaaS Pool to join

  db_server_ip:
    type: string
    description: Database Server IP

  database_name:
    type: string
    description: Name of OpenCart Database
    
  db_username:
    type: string
    description: Opencart database username
    
  db_password:
    type: string
    description: Opencart database password (for db_username above)
    
  admin_username:
    type: string
    description: Username for OpenCart Admin page
    
  admin_password:
    type: string
    description: Password for OpenCart admin user
   
  admin_email:
    type: string
    description: email address for OpenCart Admin user
    
  metadata:
    type: json

resources:
  app_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: server_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_flavor }
      key_name: { get_param: ssh_key_name }
      metadata: { get_param: metadata }
      networks:
        - network: { get_param: private_network_id }
      security_groups:
        - { get_param: security_group }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            $db_server_ip: { get_param: db_server_ip }
            $db_name: {get_param: database_name}
            $db_username: {get_param: db_username}
            $db_password: {get_param: db_password}
            $admin_username: {get_param: admin_username}
            $admin_password: {get_param: admin_password}
            $admin_email: {get_param: admin_email}
            #$floating_ip: {get_resource: app_floating_ip}
            $floating_ip: {get_attr: [ app_floating_ip, floating_ip_address ] }
          template: |
            #!/bin/bash -v
            #use apt-get for Debian/ubuntu, and yum for centos/fedora
            if apt-get -v &> /dev/null
            then
             apt-get update -y
             apt-get upgrade -y
             #Install PHP5, and mysql
             apt-get -y install apache2 php5 php5-mcrypt php5-curl libapache2-mod-php5 php5-mysql php5-gd mysql-client
             apt-get -y install unzip
            elif which yum &> /dev/null
            then
             yum update -y
             #Install PHP5, and mysql
             setenforce 0
             yum install -y httpd
             systemctl start httpd
             systemctl enable httpd
             yum install -y epel-release
             yum -y install php php-mysql php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap php-mcrypt curl zlib
             #yum install -y httpd php php-mysql php-gd php-curl php-pecl-zip
             yum install -y wget
             yum install -y unzip
            fi

            # install OpenCart 
            # download opencart
            wget https://codeload.github.com/opencart/opencart/zip/2.3.0.2
            unzip 2.3.0.2

            # setup OpenCart
            mv -v  ./opencart-2.3.0.2/upload/* /var/www/html
            # rename OpenCart config files to config.php
            cp /var/www/html/config-dist.php /var/www/html/config.php
            cp /var/www/html/admin/config-dist.php /var/www/html/admin/config.php
            rm /var/www/html/index.html

            # give apache user ownership of the files
            if apt-get -v &> /dev/null
            then
              chown -R www-data:www-data /var/www
              mv -i /etc/php5/conf.d/mcrypt.ini /etc/php5/mods-available/
              php5enmod mcrypt
              service apache2 restart
              #usermod -a -G www-data username
            elif which yum &> /dev/null
            then
              chown -R apache:apache /var/www/
              chmod -R g+w /var/www/html/
              #Allow remote database connection
              setsebool -P httpd_can_network_connect=1
              systemctl restart httpd.service
            fi
            #Configure OpenCart
            php /var/www/html/install/cli_install.php install --db_hostname $db_server_ip --db_username $db_username --db_password $db_password --db_database $db_name --db_driver mysqli --db_port 3306 --username $admin_username --password $admin_password --email $admin_email --http_server http://$floating_ip/
            rm -r /var/www/html/install

  Pool_Member:
      type: OS::Neutron::PoolMember
      properties:
        pool_id: {get_param: pool_name}
        address: {get_attr: [app_server, first_address]}
        protocol_port: 80

  app_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_network_name }

  associate_app_floating_ip:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: app_floating_ip }
      server_id: { get_resource: app_server }

outputs:
  app_private_ip:
    description: Private IP address of the Web node
    value: { get_attr: [app_server, first_address] }
  lb_member:
    description: LoadBalancer member details.
    value: { get_attr: [Pool_Member, show] }

